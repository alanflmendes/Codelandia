{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMz84P4eAU0Q3N7+mOBJ57G",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/alanflmendes/Codelandia/blob/main/python-xpe\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cateto_a = 4\n",
        "endereco=id(cateto_a)\n",
        "print (endereco)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SWkCmL0uPdiH",
        "outputId": "d481f922-592f-41a0-f916-f29e5b3eb3dc"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "11126784\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "NUMÉRICO:\n"
      ],
      "metadata": {
        "id": "2CnK35LOTQU-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "##Tipo de dados\n",
        "\n",
        "a = 5\n",
        "print ('O resultado de A é um tipo: ', type(a)) \n",
        "\n",
        "b = 5.3\n",
        "print ('O resultado de A é um tipo: ', type(b))\n",
        "\n",
        "c = 5 + 6j\n",
        "print ('O resultado de A é um tipo: ', type(c))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ixnCIrCpSbLC",
        "outputId": "82580348-c960-42e5-fedf-699e21c09c73"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "O resultado de A é um tipo:  <class 'int'>\n",
            "O resultado de A é um tipo:  <class 'float'>\n",
            "O resultado de A é um tipo:  <class 'complex'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "STRING"
      ],
      "metadata": {
        "id": "5pr5BdpQTYZR"
      }
    }
  ]
}